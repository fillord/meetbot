#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –ª–∏—Ü –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.face_detection import detect_faces_opencv, detect_faces_pil_basic, OPENCV_AVAILABLE
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_with_local_image(image_path: str):
    """–¢–µ—Å—Ç —Å –ª–æ–∫–∞–ª—å–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"""
    try:
        with open(image_path, 'rb') as f:
            image_bytes = f.read()
        
        logger.info(f"üì∏ –¢–µ—Å—Ç–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
        logger.info(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(image_bytes)} –±–∞–π—Ç")
        
        if OPENCV_AVAILABLE:
            has_faces, face_count = detect_faces_opencv(image_bytes)
            logger.info(f"üîç OpenCV: –Ω–∞–π–¥–µ–Ω–æ {face_count} –ª–∏—Ü")
            
            if has_faces:
                if face_count == 1:
                    logger.info("‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ! –û–¥–Ω–æ –ª–∏—Ü–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
                else:
                    logger.info(f"‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ª–∏—Ü: {face_count}")
            else:
                logger.info("‚ùå –õ–∏—Ü–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
        else:
            logger.error("‚ùå OpenCV –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        is_valid, score = detect_faces_pil_basic(image_bytes)
        logger.info(f"üìã –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω–∞' if is_valid else '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–∞'}")
        
    except FileNotFoundError:
        logger.error(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def demo_requirements():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–æ—Ç–æ"""
    print("üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º –≤ Meet Bot:")
    print("   ‚úÖ –ß–µ—Ç–∫–æ –≤–∏–¥–Ω–æ–µ –ª–∏—Ü–æ")
    print("   ‚úÖ –û–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –Ω–∞ —Ñ–æ—Ç–æ") 
    print("   ‚úÖ –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ")
    print("   ‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–æ 10MB")
    print("   ‚úÖ –§–æ—Ä–º–∞—Ç—ã: JPEG, PNG, WEBP")
    print("   ‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 100x100px")
    print("   ‚úÖ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –Ω–µ –±–æ–ª–µ–µ 3:1")
    print()

if __name__ == "__main__":
    print("üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –ª–∏—Ü Meet Bot")
    print("=" * 50)
    
    demo_requirements()
    
    if len(sys.argv) > 1:
        # –¢–µ—Å—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º
        image_path = sys.argv[1]
        test_with_local_image(image_path)
    else:
        print("üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"   {sys.argv[0]} <–ø—É—Ç—å_–∫_–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é>")
        print()
        print("üìù –ü—Ä–∏–º–µ—Ä—ã:")
        print(f"   {sys.argv[0]} photo.jpg")
        print(f"   {sys.argv[0]} /path/to/selfie.png")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å OpenCV
        if OPENCV_AVAILABLE:
            print("‚úÖ OpenCV –¥–æ—Å—Ç—É–ø–µ–Ω - –¥–µ—Ç–µ–∫—Ü–∏—è –ª–∏—Ü –∞–∫—Ç–∏–≤–Ω–∞")
        else:
            print("‚ö†Ô∏è OpenCV –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
        
        # –ü–æ–∫–∞–∂–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
        try:
            import cv2
            print(f"üì¶ –í–µ—Ä—Å–∏—è OpenCV: {cv2.__version__}")
        except:
            print("‚ùå OpenCV –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        try:
            from PIL import Image
            print(f"üì¶ Pillow –¥–æ—Å—Ç—É–ø–µ–Ω")
        except:
            print("‚ùå Pillow –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
